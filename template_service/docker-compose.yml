version: '3.9'

volumes:
  postgres_data:


services:
  fitter_db:
    image: 'postgres:13'
    container_name: fitter_db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    expose:
      - ${POSTGRES_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "su postgres", "&&", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 10

  fitter_redis:
    image: 'redis:6.2.6'
    container_name: fitter_redis
    expose:
      - ${REDIS_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 10

  fitter_fastapi:
    build:
      context: .
      dockerfile: src/Dockerfile
    container_name: fitter_fastapi
    restart: always
    env_file:
      - ./.env
    expose:
      - ${SERVICE_PORT}
    logging:
      options:
        max-size: 50m
    depends_on:
      fitter_db:
        condition: service_healthy

  nginx:
    container_name: cs_nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - ${NGINX_PORT}:8080
    env_file:
      - ./.env
    depends_on:
      - fitter_fastapi

  fitter_tests:
    container_name: fitter_tests
    env_file:
      - ./.env
    build:
      context: .
      dockerfile: tests/Dockerfile
    command: >
      sh -c "pytest /app/tests -s -v -p no:warnings && flake8 ."
    depends_on:
      - fitter_fastapi
    profiles:
      - testing
